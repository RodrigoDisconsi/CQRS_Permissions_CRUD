version: '3.4'

services:
  sql:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: sqlserverdb
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=A&VeryComplex123Password
    volumes:
      - sql-data:/var/opt/mssql

  elasticsearch:
    container_name: els
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.17
    ports:
        - 9200:9200
    volumes:
        - elasticsearch-data:/usr/share/elasticsearchdata
    environment:
        - xpack.security.enabled=false
        - discovery.type=single-node

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: CRUDCleanArchitecture.Api/src/Api/Dockerfile

volumes:
  elasticsearch-data:
  sql-data:
  